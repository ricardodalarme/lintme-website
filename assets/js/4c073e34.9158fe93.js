"use strict";(self.webpackChunkdart_code_metrics_website=self.webpackChunkdart_code_metrics_website||[]).push([[9386],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(n),d=a,y=u["".concat(c,".").concat(d)]||u[d]||m[d]||s;return n?r.createElement(y,o(o({ref:t},p),{},{components:n})):r.createElement(y,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9729:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(7294),a=n(5321);function s(e){let{version:t,severity:n,hasConfig:s,hasFix:o,isDeprecated:i}=e;return r.createElement("div",{className:"single-rule-info"},r.createElement(a.Z,{version:t,severity:n,hasConfig:s,hasFix:o,isDeprecated:i}))}},5321:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(7294);function a(e){let{hasConfig:t,hasFix:n,isDeprecated:a}=e;return r.createElement("div",{className:"rule-options"},t&&r.createElement("span",{title:"Configurable"},"\u2699\ufe0f"),n&&r.createElement("span",{title:"Has auto-fix"},"\ud83d\udee0"),a&&r.createElement("span",{title:"Deprecated"},"\u26a0\ufe0f"))}function s(e){let{severity:t,version:n,hasConfig:s,hasFix:o,isDeprecated:i}=e;const c=null==t?void 0:t.toLowerCase();return r.createElement("div",{className:"rule-additional-info"},r.createElement("div",null,r.createElement("span",{className:"added-in-label"},"added in:")," ",n),r.createElement("div",{className:`rule-severity ${c}`},c),r.createElement(a,{hasConfig:s,hasFix:o,isDeprecated:i}))}},8161:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=n(7462),a=(n(7294),n(3905)),s=n(9729);const o={},i=void 0,c={unversionedId:"rules/common/avoid-unnecessary-type-assertions",id:"rules/common/avoid-unnecessary-type-assertions",title:"avoid-unnecessary-type-assertions",description:"Warns about unnecessary usage of is and whereType operators.",source:"@site/docs/rules/common/avoid-unnecessary-type-assertions.mdx",sourceDirName:"rules/common",slug:"/rules/common/avoid-unnecessary-type-assertions",permalink:"/docs/rules/common/avoid-unnecessary-type-assertions",draft:!1,editUrl:"https://github.com/dart-code-checker/dart-code-metrics/tree/master/website/docs/rules/common/avoid-unnecessary-type-assertions.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"avoid-unnecessary-conditionals",permalink:"/docs/rules/common/avoid-unnecessary-conditionals"},next:{title:"avoid-unnecessary-type-casts",permalink:"/docs/rules/common/avoid-unnecessary-type-casts"}},l={},p=[{value:"Example",id:"example",level:3},{value:"Example 1 Check is same type",id:"example-1-check-is-same-type",level:4},{value:"Example 2 whereType method",id:"example-2-wheretype-method",level:4}],m={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(s.Z,{version:"4.7.0",severity:"warning",mdxType:"RuleDetails"}),(0,a.kt)("p",null,"Warns about unnecessary usage of ",(0,a.kt)("inlineCode",{parentName:"p"},"is")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"whereType")," operators."),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("h4",{id:"example-1-check-is-same-type"},"Example 1 Check is same type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"class Example {\n  final myList = <int>[1, 2, 3];\n\n  void main() {\n    final result = myList is List<int>; // LINT\n    myList.whereType<int>();\n  }\n}\n")),(0,a.kt)("h4",{id:"example-2-wheretype-method"},"Example 2 whereType method"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"main(){\n  ['1', '2'].whereType<String?>(); // LINT\n}\n")))}u.isMDXComponent=!0}}]);